name: Build Zed Nightly

on:
  workflow_dispatch:
    inputs:
      schedule:
        description: 'Manual Release'
        required: true
        default: false
        type: boolean
  schedule:
    - cron: "0 7 * * *"

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: zed-industries/zed
          ref: main
          fetch-depth: 0

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
            cache-all-crates: "true"

      - name: Cache latest commit hash
        if: ${{ github.event_name == 'schedule' || inputs.schedule }}
        uses: actions/cache@v4
        with:
            path: .last_commit_hash
            key: latest-commit-hash-${{ github.run_number }}
            restore-keys: 'latest-commit-hash'
            save-always: true

      - name: Generate changelog
        if: ${{ github.event_name == 'schedule' || inputs.schedule }}
        run: |
          if (Test-Path .last_commit_hash) {
            $LHASH = Get-Content -Path .last_commit_hash -Raw
            $LHASH = git rev-parse $LHASH
          } else {
            $LHASH = git rev-parse HEAD~1
          }

          # save current commit to file
          $CHASH = git rev-parse HEAD
          $CHASH | Out-File -FilePath .last_commit_hash -NoNewline

          $REV = "$LHASH..HEAD"
          $SHORT_LHASH = "$LHASH".Substring(0, 7)
          $SHORT_CHASH = "$CHASH".Substring(0, 7)
          echo "## Changelog [$SHORT_LHASH](https://github.com/zed-industries/zed/commit/$LHASH)..[$SHORT_CHASH](https://github.com/zed-industries/zed/commit/$CHASH) - [compare](https://github.com/zed-industries/zed/compare/$LHASH...$CHASH)" >> changelog.txt
          echo "| Commit | Message |" >> changelog.txt
          echo "| - | - |" >> changelog.txt
          echo $(git log $REV --reverse --date=relative --abbrev=7 --pretty=format:"| [%h](https://github.com/zed-industries/zed/commit/%H) | %s |") >> changelog.txt

      - name: Build release
        env:
          RUSTFLAGS: -C target-cpu=znver3
        run: |
          cargo build --release --color always

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: zed-release
          path: target/release/zed.exe

      - name: Archive build
        if: ${{ github.event_name == 'schedule' || inputs.schedule }}
        run: |
          Compress-Archive -CompressionLevel Optimal -Path target/release/zed.exe -DestinationPath zed-windows.zip

      - name: Get the current date
        if: ${{ github.event_name == 'schedule' || inputs.schedule }}
        run: |
          # get yesterday's date
          $DATE = (Get-Date).AddDays(-1).ToString("yyyy-MM-dd")
          echo "DATE=$DATE" >> $env:GITHUB_ENV

      - name: Upload release to GitHub Release
        if: ${{ github.event_name == 'schedule' || inputs.schedule }}
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.DATE }}
          tag_name: ${{ env.DATE }}
          body_path: changelog.txt
          draft: false
          make_latest: true
          files: zed-windows.zip
